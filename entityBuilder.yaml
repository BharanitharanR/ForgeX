openapi: 3.0.0
info:
  title: Entity Builder sservice API
  description: API for processing entities and creating database collections.
  version: 1.0.0
servers:
  - url: http://localhost:8082
    description: Local development server
paths:
  /entity/process:
    post:
      summary: Process entities
      description: Accepts a list of entities and creates database collections for each entity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Node'
      responses:
        '200':
          description: Entities processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Entities processed successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid entity data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error processing entities"
components:
  schemas:
    Node:
      type: object
      properties:
        type:
          type: string
          enum: [ ENTITY, RULE, EVENT ]
          example: "entity"
        name:
          type: string
          example: "Sale"
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'

    Field:
      type: object
      properties:
        name:
          type: string
          example: "saleId"
        type:
          type: string
          example: "string"
        required:
          type: boolean
          example: true


    serviceCollection:
      type: "object"
      properties:
        userId:
          type: string
        name:
          type: string
        lastModifiedTimeStamp:
          type: object
          $ref: '#/components/schemas/MongoDate'

    MongoDate:
      type: "object"
      properties:
        $date:
          type: string
          format: time


